{"remainingRequest":"/home/turboscient-dev/OMDb-API/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/turboscient-dev/OMDb-API/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/turboscient-dev/OMDb-API/src/components/HelloWorld.vue","mtime":1610943883454},{"path":"/home/turboscient-dev/OMDb-API/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsICAKICBkYXRhOiAoKSA9PiAoewogICAganNvblJlczogbnVsbCwKICAgIHBvc3RlcjogbnVsbCwKICAgIHRleHQ6ICcnLAogICAgbm9taW5hdGVkOiBbXQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGZldGNoVGV4dCh0aXRsZSkgewogICAgICAgICAgbGV0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL3d3dy5vbWRiYXBpLmNvbS8/YXBpa2V5PWE3MmQ4YzE5JnQ9JyArIHRpdGxlKQogICAgICAgICAgbGV0IHBvcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2ltZy5vbWRiYXBpLmNvbS8/YXBpa2V5PWE3MmQ4YzE5JnQ9JyArIHRpdGxlKQogICAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCByZXMudGV4dCgpICAgICAgICAgIAogICAgICAgICAgdGhpcy5qc29uUmVzID0gZGF0YSAgICAKICAgICAgICAgIHRoaXMucG9zdGVyID0gcG9zICAgIAogICAgfSwKICAgIHJlbW92ZU1vdmllKGlkKSB7CiAgICAgIHRoaXMubm9taW5hdGVkLnNwbGljZShpZCwgMSkgICAgIAogICAgfSwKICAgIG5vdEluTW92aWVMaXN0KGlkKSB7CiAgICAgIGNvbnN0IG5ld0FyciA9IFsuLi50aGlzLm5vbWluYXRlZF0gICAgICAKICAgICAgcmV0dXJuIG5ld0Fyci5maWx0ZXIobm9taW5hdGlvbiA9PiBub21pbmF0aW9uLmltZGJJRCA9PSBpZCkubGVuZ3RoID09IDAKICAgIH0sCiAgICBub21pbmF0aW9uUHJvY2VzcyhlbGVtKSB7CiAgICAgIHRoaXMubm9taW5hdGVkLnB1c2goZWxlbSkKICAgICAgaWYgKHRoaXMubm9taW5hdGVkLmxlbmd0aCA9PSA1KSB7CiAgICAgICAgdGhpcy4kYnZNb2RhbC5zaG93KCdtb2RhbC0xJykgCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoVGV4dCgnJykKICB9LAogIHdhdGNoOiB7CiAgICB0ZXh0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuZmV0Y2hUZXh0KHRoaXMudGV4dCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div>\n      <h1>OMDb API Movie Search</h1>\n      <div style=\"width: 20vw; float: left; margin-left: 5vw;\">\n        <b-card       \n          tag=\"article\"\n          style=\"max-width: 20rem;\"\n          class=\"mb-2\"\n        >\n          <h2><b>Movie info</b></h2>\n          <h3>Title: {{ JSON.parse(jsonRes).Title }}</h3>\n          <h3>Released: {{ JSON.parse(jsonRes).Released }}</h3>\n          <h3 v-for=\"rating in JSON.parse(jsonRes).Ratings\" :key=\"rating.Source\">\n              {{ rating.Source }}: {{ rating.Value }}\n          </h3>\n          <div style=\"margin-bottom: 2vw;\"></div>\n          \n            <b-button href=\"#\" \n                      v-if=\"notInMovieList(JSON.parse(jsonRes).imdbID)\"\n                      @click=\"nominationProcess((JSON.parse(jsonRes)))\" \n                      variant=\"outline-primary\">Nominate\n            </b-button>      \n           \n        </b-card>\n      </div>\n\n      <div style=\"float: left;\">\n        <b-card\n          title=\"The Shoppies\"\n          img-src=\"https://images.pexels.com/photos/3137890/pexels-photo-3137890.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          img-alt=\"Movies\"\n          img-top\n          tag=\"article\"\n          style=\"max-width: 50vw;\"\n          class=\"mb-2\"\n        >        \n            <div style=\"width: 20vw; margin-left: 15vw\">\n              <b-form-input v-model=\"text\" placeholder=\"Search for a movie\"></b-form-input>            \n            </div>        \n        </b-card>\n      </div>\n\n      <div style=\"width: 20vw; float: left; margin-left: 2vw;\">\n        <b-card       \n          tag=\"article\"\n          style=\"max-width: 20rem;\"\n          class=\"mb-2\"\n        >\n          <h2><b>Nominated</b></h2>\n          <h3 v-for=\"nomination in nominated\" :key=\"nomination.imdbID\">                 \n            {{ nomination.Title }}\n            <b-button href=\"#\"       \n              @click=\"removeMovie(nomination.imdbID)\"            \n              variant=\"dark\">Remove\n            </b-button>                \n          </h3>\n        </b-card>\n      </div>\n    </div>    \n\n    <div>\n\n      <b-modal id=\"modal-1\" title=\"OMDb Notification\">\n        <p class=\"my-4\">You've added five movies!</p>\n      </b-modal>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',  \n  data: () => ({\n    jsonRes: null,\n    poster: null,\n    text: '',\n    nominated: []\n  }),\n  methods: {\n    async fetchText(title) {\n          let res = await fetch('https://www.omdbapi.com/?apikey=a72d8c19&t=' + title)\n          let pos = await fetch('https://img.omdbapi.com/?apikey=a72d8c19&t=' + title)\n          let data = await res.text()          \n          this.jsonRes = data    \n          this.poster = pos    \n    },\n    removeMovie(id) {\n      this.nominated.splice(id, 1)     \n    },\n    notInMovieList(id) {\n      const newArr = [...this.nominated]      \n      return newArr.filter(nomination => nomination.imdbID == id).length == 0\n    },\n    nominationProcess(elem) {\n      this.nominated.push(elem)\n      if (this.nominated.length == 5) {\n        this.$bvModal.show('modal-1') \n      }\n    }\n  },\n  created() {\n    this.fetchText('')\n  },\n  watch: {\n    text: function () {\n      this.fetchText(this.text)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}