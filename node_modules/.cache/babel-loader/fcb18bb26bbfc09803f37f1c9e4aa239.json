{"remainingRequest":"/home/turboscient-dev/OMDb-API/node_modules/babel-loader/lib/index.js!/home/turboscient-dev/OMDb-API/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/turboscient-dev/OMDb-API/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/turboscient-dev/OMDb-API/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/turboscient-dev/OMDb-API/src/components/HelloWorld.vue","mtime":1610941908279},{"path":"/home/turboscient-dev/OMDb-API/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/turboscient-dev/OMDb-API/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvdHVyYm9zY2llbnQtZGV2L09NRGItQVBJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3R1cmJvc2NpZW50LWRldi9PTURiLUFQSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGpzb25SZXM6IG51bGwsCiAgICAgIHBvc3RlcjogbnVsbCwKICAgICAgdGV4dDogJycsCiAgICAgIG5vbWluYXRlZDogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaFRleHQ6IGZ1bmN0aW9uIGZldGNoVGV4dCh0aXRsZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzLCBwb3MsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vY29ycy1hbnl3aGVyZS5oZXJva3VhcHAuY29tL2h0dHA6Ly93d3cub21kYmFwaS5jb20vP2FwaWtleT1hNzJkOGMxOSZ0PScgKyB0aXRsZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9jb3JzLWFueXdoZXJlLmhlcm9rdWFwcC5jb20vaHR0cDovL2ltZy5vbWRiYXBpLmNvbS8/YXBpa2V5PWE3MmQ4YzE5JnQ9JyArIHRpdGxlKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcG9zID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy50ZXh0KCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMuanNvblJlcyA9IGRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5wb3N0ZXIgPSBwb3M7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVtb3ZlTW92aWU6IGZ1bmN0aW9uIHJlbW92ZU1vdmllKGlkKSB7CiAgICAgIHRoaXMubm9taW5hdGVkLnNwbGljZShpZCwgMSk7CiAgICB9LAogICAgbm90SW5Nb3ZpZUxpc3Q6IGZ1bmN0aW9uIG5vdEluTW92aWVMaXN0KGlkKSB7CiAgICAgIHZhciBuZXdBcnIgPSBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5ub21pbmF0ZWQpOwoKICAgICAgcmV0dXJuIG5ld0Fyci5maWx0ZXIoZnVuY3Rpb24gKG5vbWluYXRpb24pIHsKICAgICAgICByZXR1cm4gbm9taW5hdGlvbi5pbWRiSUQgPT0gaWQ7CiAgICAgIH0pLmxlbmd0aCA9PSAwOwogICAgfSwKICAgIG5vbWluYXRpb25Qcm9jZXNzOiBmdW5jdGlvbiBub21pbmF0aW9uUHJvY2VzcyhlbGVtKSB7CiAgICAgIHRoaXMubm9taW5hdGVkLnB1c2goZWxlbSk7CgogICAgICBpZiAodGhpcy5ub21pbmF0ZWQubGVuZ3RoID09IDUpIHsKICAgICAgICB0aGlzLiRidk1vZGFsLnNob3coJ21vZGFsLTEnKTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hUZXh0KCcnKTsKICB9Cn07"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,IAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA;AAJA,KAAA;AAAA,GAFA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,mFAAA,KAAA,CADA;;AAAA;AACA,gBAAA,GADA;AAAA;AAAA,uBAEA,KAAA,CAAA,mFAAA,KAAA,CAFA;;AAAA;AAEA,gBAAA,GAFA;AAAA;AAAA,uBAGA,GAAA,CAAA,IAAA,EAHA;;AAAA;AAGA,gBAAA,IAHA;AAIA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,MAAA,GAAA,GAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAPA;AAQA,IAAA,WARA,uBAQA,EARA,EAQA;AACA,WAAA,SAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA;AACA,KAVA;AAWA,IAAA,cAXA,0BAWA,EAXA,EAWA;AACA,UAAA,MAAA,sBAAA,KAAA,SAAA,CAAA;;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,UAAA,UAAA;AAAA,eAAA,UAAA,CAAA,MAAA,IAAA,EAAA;AAAA,OAAA,EAAA,MAAA,IAAA,CAAA;AACA,KAdA;AAeA,IAAA,iBAfA,6BAeA,IAfA,EAeA;AACA,WAAA,SAAA,CAAA,IAAA,CAAA,IAAA;;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,SAAA;AACA;AACA;AApBA,GARA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,SAAA,CAAA,EAAA;AACA;AAhCA,CAAA","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div>\n      <h1>OMDb API Movie Search</h1>\n      <div style=\"width: 20vw; float: left; margin-left: 5vw;\">\n        <b-card       \n          tag=\"article\"\n          style=\"max-width: 20rem;\"\n          class=\"mb-2\"\n        >\n          <h2><b>Movie info</b></h2>\n          <h3>Title: {{ JSON.parse(jsonRes).Title }}</h3>\n          <h3>Released: {{ JSON.parse(jsonRes).Released }}</h3>\n          <h3 v-for=\"rating in JSON.parse(jsonRes).Ratings\" :key=\"rating.Source\">\n              {{ rating.Source }}: {{ rating.Value }}\n          </h3>\n          <div style=\"margin-bottom: 2vw;\"></div>\n          \n            <b-button href=\"#\" \n                      v-if=\"notInMovieList(JSON.parse(jsonRes).imdbID)\"\n                      @click=\"nominationProcess((JSON.parse(jsonRes)))\" \n                      variant=\"outline-primary\">Nominate\n            </b-button>      \n           \n        </b-card>\n      </div>\n\n      <div style=\"float: left;\">\n        <b-card\n          title=\"The Shoppies\"\n          img-src=\"https://images.pexels.com/photos/3137890/pexels-photo-3137890.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          img-alt=\"Movies\"\n          img-top\n          tag=\"article\"\n          style=\"max-width: 50vw;\"\n          class=\"mb-2\"\n        >        \n            <div style=\"width: 20vw; margin-left: 15vw\">\n              <b-form-input :click=\"fetchText(text)\" v-model=\"text\" placeholder=\"Search for a movie\"></b-form-input>            \n            </div>        \n        </b-card>\n      </div>\n\n      <div style=\"width: 20vw; float: left; margin-left: 2vw;\">\n        <b-card       \n          tag=\"article\"\n          style=\"max-width: 20rem;\"\n          class=\"mb-2\"\n        >\n          <h2><b>Nominated</b></h2>\n          <h3 v-for=\"nomination in nominated\" :key=\"nomination.imdbID\">                 \n            {{ nomination.Title }}\n            <b-button href=\"#\"       \n              @click=\"removeMovie(nomination.imdbID)\"            \n              variant=\"dark\">Remove\n            </b-button>                \n          </h3>\n        </b-card>\n      </div>\n    </div>    \n\n    <div>\n\n      <b-modal id=\"modal-1\" title=\"OMDb Notification\">\n        <p class=\"my-4\">You've added five movies!</p>\n      </b-modal>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',  \n  data: () => ({\n    jsonRes: null,\n    poster: null,\n    text: '',\n    nominated: []\n  }),\n  methods: {\n    async fetchText(title) {\n          let res = await fetch('https://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?apikey=a72d8c19&t=' + title)\n          let pos = await fetch('https://cors-anywhere.herokuapp.com/http://img.omdbapi.com/?apikey=a72d8c19&t=' + title)\n          let data = await res.text()          \n          this.jsonRes = data    \n          this.poster = pos    \n    },\n    removeMovie(id) {\n      this.nominated.splice(id, 1)     \n    },\n    notInMovieList(id) {\n      const newArr = [...this.nominated]      \n      return newArr.filter(nomination => nomination.imdbID == id).length == 0\n    },\n    nominationProcess(elem) {\n      this.nominated.push(elem)\n      if (this.nominated.length == 5) {\n        this.$bvModal.show('modal-1') \n      }\n    }\n  },\n  created() {\n    this.fetchText('')\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}